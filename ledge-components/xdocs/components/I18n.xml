<?xml version="1.0" encoding="ISO-8859-1"?>
<document>
  <properties>
    <title>I18n</title>
  </properties>

  <body>
    <section name="I18n">
      <p>Dependencies:
        <table>
          <tr>
            <th>required components</th>
            <td width="100%">
              <a href="FileSystem.html">FileSystem</a>, 
              <a href="../../ledge-container/container-subsystems/LoggerFactory.html">LoggerFactory</a>, 
              <a href="../../ledge-container/container-subsystems/ConfigurationFactory.html">ConfigurationFactory</a>
            </td>
          </tr>
          <tr>
            <th>required libraries</th>
            <td>DNA API (dna:dna-api)</td>
          </tr>
        </table>
      </p>

      <p>I18n component provide the access to the locale sensitive <code>String</code> resources.</p>

	  <p><a href="../apidocs/org/objectledge/i18n/I18n.html">View JavaDoc</a></p>

      <p>Constructor parameters<br/>
      The default implementation based on XML requires following parameters:<br/>
	    <table>
	      <tr>
	        <th>position</th>
	        <th>type</th>
	        <th widht="100%">descritpion</th>
	      </tr>
	      <tr>
	        <td>1</td>
	        <td><code>org.jcontainer.dna.Configuration</code></td>
	        <td>the configuration</td>
	      </tr>
		  <tr>
		    <td>2</td>
		    <td><code>import org.jcontainer.dna.Logger</code></td>
		    <td>the logger</td>
		  </tr>
		  <tr>
		    <td>3</td>
		    <td><code>org.objectledge.filesystem.FileSystem</code></td>
		    <td>the file system to access the templates</td>
		  </tr>
		  <tr>
		    <td>4</td>
		    <td><code>java.lang.String</code></td>
		    <td>the file system path to the directory that contatins localization files.</td>
		  </tr>
		</table>
	  </p>
	  <p>To configure the XMLI18n component see the rng schema
	  <a href="http://objectledge.org/viewcvs.cgi/ledge-components/src/main/java/org/objectledge/i18n/impl/XMLI18n.rng?rev=HEAD&amp;content-type=text/vnd.viewcvs-markup">
	  view schema</a></p>
	  <subsection name="I18n files format">
	  <p>The name of the file is being checked for validity based on following regular expression: <br/> 
	    <pre>
[a-zA-Z0-9]*(\\.[a-zA-Z0-9]+)*_[a-z]{2}_[A-Z]{2}\\.xml
	    </pre>
	    Be sure your files conform to this magical string. :-) 

       </p>
       <p>
	    First part of the file name represents the namespace, 
		second part is locale marker. Namespace elements are separated with dots, 
		locale is composed of "language" and "country" (capitalized) parts.
		</p>
		<p>
		Language variants are not supported.

        Here's an example of i18n usage:

        We have a file in proper directory named as following:
        <pre>
foo.bar_pl_PL.xml
        </pre>
		
	  </p>
	  <p>File contains following XML code:<br/>
      <pre>
&lt;prefix name="foo2"&gt;
  ...
    &lt;prefix name=""bar2"&gt;
      &lt;item name="baz"&gt;my_value&lt;/item&gt;
    &lt;/prefix&gt;
  ...
&lt;/prefix&gt;
      </pre>
      The prefixes from file name and internal xml structure 
      are joined into one namespace. Following the example, if you want to 
      obtain the item value ('my_value') you should use: 
      <code>foo.bar.foo2.&lt;...&gt;.bar2.baz</code> key.
	  </p>
	  </subsection>
    </section>
  </body>
</document>  
  