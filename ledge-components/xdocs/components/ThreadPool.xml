<?xml version="1.0" encoding="ISO-8859-1"?>
<document>
  <properties>
    <title>ThreadPool</title>
  </properties>

  <body>
    <section name="ThreadPool">
      <subsection name="Description">
	    <p>ThreadPool executes <em>Tasks</em> asynchronously, using long running daemon threads, or 
	    using worker threads from a pool of limited capacity.</p>
	    <p><em>Task</em> is derived from <em>Valve</em>. The differences are that <em>Task</em> is
	    named (base implementation uses derived class name for that), and that a long running 
	    <em>Task</em> may be asked to interrupt it's operation and terminate.</p>
	    <p>Tasks passed to <code>runDaemon(Task)</code> method are executed in a JVM daemon threads.
	    It is considered an error condition if such tasks exits it's <code>process(Context)</code>
	    method before <code>terminate(Thread)</code> method is called upon it.</p>
	    <p>Tasks passed to <code>runWorker(Task)</code> method are put into a FIFO queue. A special
	    daemon Task - worker scheduler - picks them up and dispatches them using worker threads
	    from a limited size pool. The tasks passed to <code>runWorker(Task)</code> should terminate
	    in reasonable time, otherwise the pool will become exhausetd and the tasks will linger in
	    the dispatch queue. The implementation does not detect nor attempt to fix this situation at
	    this point.</p>
	    <p>The cleanup valve, passed to the ThreadPool's constructor is invoked whenever user
	    supplied Task terminates. It may be used to perform cleanup and accounting as needed.
	    Note that you may use <code>SimplePipeline</code> component to chain a few cleanup
	    valves together.</p>
      </subsection>
    
      <subsection name="Browse">
        <p>
          <ul>
            <li>Task <a href="../apidocs/org/objectledge/threads/Task.html">JavaDoc</a></li>
            <li>Task <a href="../xref/org/objectledge/threads/Task.html">XRef</a></li>
            <li>Task <a href="http://objectledge.org/viewcvs.cgi/ledge-components/src/main/java/org/objectledge/threads/Task.java">CVS log</a></li>
            <li>ThreadPool <a href="../apidocs/org/objectledge/threads/ThreadPool.html">JavaDoc</a></li>
            <li>ThreadPool <a href="../xref/org/objectledge/threads/ThreadPool.html">XRef</a></li>
            <li>ThreadPool <a href="http://objectledge.org/viewcvs.cgi/ledge-components/src/main/java/org/objectledge/threads/ThreadPool.java">CVS log</a></li>
            <li>ThreadPool configuration <a href="http://objectledge.org/viewcvs.cgi/ledge-components/src/main/java/org/objectledge/threads/ThreadPool.rng?rev=HEAD&amp;content-type=text/vnd.viewcvs-markup">schema</a></li>
          </ul>
        </p>
      </subsection>
    
      <subsection name="Dependencies">
        <p>
          <table>
            <tr>
              <th>required components</th>
              <td width="100%">
                <a href="Context.html">Context</a>,
                <a href="../../ledge-container/container-subsystems/LoggerFactory.html">LoggerFactory</a>,
                <a href="../../ledge-container/container-subsystems/ConfigurationFactory.html">ConfigurationFactory</a>
              </td>
            </tr>
            <tr>
              <th>required libraries</th>
              <td>DNA API (dna:dna-api), commons-pool (commons-pool)</td>
            </tr>
          </table>
        </p>
      </subsection>  
         
      <subsection name="Constructor parameters">
        <p>
  	      <table>
	        <tr>
	          <th>position</th>
	          <th>type</th>
	          <th widht="100%">descritpion</th>
	        </tr>
	        <tr>
	        <tr>
	          <td>1</td>
	          <td><code>org.objectledge.pipeline.Valve</code></td>
	          <td>the cleanup Valve</td>
	        </tr>
	        </tr>
	          <td>2</td>
	          <td><code>org.objectledge.context.Context</code></td>
	          <td>the thread's context</td>
	        </tr>
		    <tr>
		      <td>3</td>
		      <td><code>import org.jcontainer.dna.Configuration</code></td>
		      <td>the pool configuration</td>
		    </tr>
		    <tr>
		      <td>4</td>
		      <td><code>import org.jcontainer.dna.Logger</code></td>
		      <td>the logger</td>
		    </tr>
		  </table>
 	    </p>
	  </subsection>
    </section>
  </body>
</document>  
